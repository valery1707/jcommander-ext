docker:
  image: yegor256/java8
decrypt:
  settings.xml: "repo/.rultor/settings.xml.asc"
  pubring.gpg: "repo/.rultor/pubring.gpg.asc"
  secring.gpg: "repo/.rultor/secring.gpg.asc"
install: |-
  java -version
deploy:
  script: |
    cat /home/r/script.sh
    if [ "${version}" = "" ] ; then
      version=$(cat pom.xml | grep --extended-regexp --regexp="<version>[0-9.]+</version>" | head -n1 | sed -r 's_.*<version>([0-9.]+)</version>.*_\1_')
    fi
    if [ "${next}" = "" ] ; then
      version_1=$(echo -n "${version}" | cut -d '.' -f1)
      version_2=$(echo -n "${version}" | cut -d '.' -f2)
      version_3=$(echo -n "${version}" | cut -d '.' -f3)
      next=${version_1}.${version_2}.$[${version_3} + 1]
    fi
    changelog_s=$(grep -F -e '# CURRENT' -n CHANGELOG.md | cut -d ':' -f1 | head --lines=1)
    changelog_f=$(grep -E -e '# [0-9.]+' -n CHANGELOG.md | cut -d ':' -f1 | head --lines=1)
    changelog_s=$[${changelog_s} + 2]
    changelog_f=$[${changelog_f} - 1]
    changelog_l=$[${changelog_f} - ${changelog_s}]
    changelog=$(cat CHANGELOG.md | tail --lines=+${changelog_s} | head --lines=${changelog_l})
    sed --in-place 's/# CURRENT/# CURRENT\n\n# ${version}/g'
    gpg_pass=$(cat ../settings.xml | grep 'gpg.passphrase' | grep --only-matching '>.*<' | cut -c 2- | rev | cut -c 2- | rev)
    mvn versions:set "-DnewVersion=${version}"
    mvn clean install -P release -Dgpg.passphrase=${gpg_pass}
    git commit -am "Release version ${version}"
    git tag --local-user='valery1707@gmail.com' -m "Release version ${version}" v${version}
    echo "Release version: ${version}"
    echo "Next version: ${next}"
    echo "Changelog: ${changelog}"
    git status
    date --invalid-argument
    mvn deploy -P release --settings ../settings.xml
    mvn versions:set "-DnewVersion=${next}-SNAPSHOT"
    git commit -am "Prepare for next development iteration"
    git push --all origin
    git push --tags origin
    mvn github-release-plugin:release -P release --settings ../settings.xml -Dgithub.tag="${version}" -Dgithub.releaseName="v${version}" -Dgithub.description="${changelog}"
